<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: php | Daves dev warblings]]></title>
  <link href="http://jedistirfry.co.uk/blog/categories/php/atom.xml" rel="self"/>
  <link href="http://jedistirfry.co.uk/"/>
  <updated>2015-09-15T14:28:50+01:00</updated>
  <id>http://jedistirfry.co.uk/</id>
  <author>
    <name><![CDATA[David Yell]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Making a calendar]]></title>
    <link href="http://jedistirfry.co.uk/blog/2015-05/making-calendars/"/>
    <updated>2015-05-29T11:04:12+01:00</updated>
    <id>http://jedistirfry.co.uk/blog/2015-05/making-calendars</id>
    <content type="html"><![CDATA[<h2>How to generate a calendar using PHP?</h2>

<p>At work I built a new holiday calendar system to replace the old system which was being closed down. The company needed a way for employees to request holiday and also managers to check booked holidays by team.</p>

<p><a href="http://i.imgur.com/079nh27.png">This is what it looks like once it&rsquo;s been styled</a>.</p>

<h2>Why have I written my own code?</h2>

<p>A few reasons really, primarily because it&rsquo;s a learning experience and secondly because I don&rsquo;t recall being able to find a decent library with did it. No doubt there are a few, if you know any, please leave a comment and I&rsquo;ll update this post, thanks!</p>

<h2>Calendar code</h2>

<p>Just a point to note, this is written in a <a href="http://cakephp.org/">CakePHP</a> view, and uses a table.</p>

<p>```php</p>

<table summary="calendar" class="table table-bordered" id="holiday-calendar">
    <thead>
        <tr>
            <th><?= __('Monday')?></th>
            <th><?= __('Tuesday')?></th>
            <th><?= __('Wednesday')?></th>
            <th><?= __('Thursday')?></th>
            <th><?= __('Friday')?></th>
            <th><?= __('Saturday')?></th>
            <th><?= __('Sunday')?></th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <?php
            // $days is a CakePHP2 data array of days
            
            // Work out when the month starts in the grid
            for ($i = 1; $i <= 7; $i++) {
                if ((int)date('N', strtotime($days[0]['Day']['date'])) === $i) {
                    // This is a CakePHP element to make a table cell for the day
                    echo $this->element('calendar-day', ['day' => $days[0]]);
                    break;
                } else {
                    echo "<td>&nbsp;</td>";
                }
            }

            $numOutput = 1;
            $remainingCells = 7 - $i;

            // Output the remaining cells after the first day
            for ($i = 1; $i <= $remainingCells; $i++) {
                echo $this->element('calendar-day', ['day' => $days[$i]]);
                $numOutput++;
            }
            ?>
        </tr>

        <tr>
            <?php
            $dayOfWeek = 0;
            // Output the remaining rows
            for ($i = $numOutput; $i < count($days); $i++) {
                echo $this->element('calendar-day', ['day' => $days[$i]]);

                // Look for the end of the week to roll a new row
                $dayOfWeek++;
                if ($dayOfWeek === 7) {
                    $dayOfWeek = 0;
                    echo "</tr><tr>";
                }
            }

            // Finish off the table with empty rows
            if ($dayOfWeek != 7) {
                for ($i = $dayOfWeek; $i < 7; $i++) {
                    echo "<td>&nbsp;</td>";
                }
            }
            ?>
        </tr>

    </tbody>
</table>


<p>```</p>

<h3>All done</h3>

<p>That&rsquo;s it, you now have a nice horizontal calendar similar to Google Calendar!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sorting multi-dimension model data]]></title>
    <link href="http://jedistirfry.co.uk/blog/2014-08/sorting-data/"/>
    <updated>2014-08-12T15:42:10+01:00</updated>
    <id>http://jedistirfry.co.uk/blog/2014-08/sorting-data</id>
    <content type="html"><![CDATA[<h3>Scenario</h3>

<p>So often you have a large collection of collated data, probably with some calculated fields and you want to sort one of the dimensions by a certain value. Pretty hard using regular array methods, unless you start slicing arrays out of their dimension, sort them and inject them back in. We don&rsquo;t want to do that because it&rsquo;s fiddly.</p>

<h3>Solution</h3>

<p>So the solution I like to use is to use <a href="http://php.net/manual/en/function.usort.php">usort()</a>. Which is a handy function allowing you to sort an array using your own function. Perfect if you want to sort a related models data.</p>

<h3>Example</h3>

<p>So for the example we&rsquo;ll assume that we have a <code>League</code> model which <code>hasMany</code> <code>LeaguesUser</code>. We want to count the number of points a user has and order the data accordingly.</p>

<p>When returned from a Cake <code>find()</code> we&rsquo;ll end up with related data in dimensions.
```php
&lt;?php
array (size=2)
  &lsquo;League&rsquo; =></p>

<pre><code>array (size=9)
  'id' =&gt; string '1' (length=1)
  'name' =&gt; string 'Examples!' (length=9)
  'slug' =&gt; string 'examples' (length=9)
  'description' =&gt; string 'The league for people who like examples' (length=45)
  'cover' =&gt; string '1000x1000.jpg' (length=13)
  'image_dir' =&gt; string '1' (length=1)
  'join_code' =&gt; string 'da39a3ee5e6b4b0d3255bfef95601890afd80709' (length=40)
  'created' =&gt; string '2014-08-04 10:45:45' (length=19)
  'modified' =&gt; string '2014-08-11 14:54:34' (length=19)
</code></pre>

<p>  &lsquo;LeaguesUser&rsquo; =></p>

<pre><code>array (size=2)
  0 =&gt; 
    array (size=5)
      'id' =&gt; string '1' (length=1)
      'league_id' =&gt; string '1' (length=1)
      'user_id' =&gt; string '2' (length=1)
      'admin' =&gt; boolean true
      'User' =&gt; 
        array (size=5)
          'id' =&gt; string '2' (length=1)
          'email' =&gt; string 'test@example.com' (length=16)
          'username' =&gt; string 'testuser' (length=8)
          'predictions' =&gt; int 2
          'correct' =&gt; int 0
  1 =&gt; 
    array (size=5)
      'id' =&gt; string '2' (length=1)
      'league_id' =&gt; string '1' (length=1)
      'user_id' =&gt; string '1' (length=1)
      'admin' =&gt; boolean false
      'User' =&gt; 
        array (size=5)
          'id' =&gt; string '1' (length=1)
          'email' =&gt; string 'testuser1@example.com' (length=20)
          'username' =&gt; string 'testuser1' (length=8)
          'predictions' =&gt; int 2
          'correct' =&gt; int 1
</code></pre>

<p>```</p>

<p>So let&rsquo;s sort that <code>LeaguesUser['User']</code> dimension by the number of correct predicitons.</p>

<p>Firstly, we&rsquo;ll want to create a new <code>private function sortByCorrect($a, $b)</code> in our controller. Then we just need to sort using it in our currenct controller method.</p>

<p>The important thing to note is that the callable function passed to <code>usort()</code> is an array containing the current controller as the first item. <code>usort($data, [$this, 'callableFunction'])</code> without including <code>$this</code> you&rsquo;ll get an error.</p>

<p>```php
&lt;?php
public function view($slug) {</p>

<pre><code>$league = $this-&gt;League-&gt;find('first', [
    'contain' =&gt; [
        'LeaguesUser' =&gt; [
            'User' =&gt; [
                'fields' =&gt; ['id', 'email', 'username', 'correct', 'predicitons']
            ]
        ]
    ],
    'conditions' =&gt; [
        'League.slug' =&gt; $slug
    ]
]);

usort($league, [$this, 'sortByCorrect']);

$this-&gt;set('league', $league);
</code></pre>

<p>}</p>

<p>private function sortByCorrect($a, $b) {</p>

<pre><code>if ($a['User']['correct'] &lt; $b['User']['correct']) {
    return 1;
} elseif ($a['User']['correct'] == $b['User']['correct']) {
    return 0;
} else {
    return -1;
}
</code></pre>

<p>}</p>

<p>// Rest of controller
```</p>

<h3>Done</h3>

<p>Go make a brew! Your work here is done.</p>
]]></content>
  </entry>
  
</feed>
